<!DOCTYPE HTML>
<html>

<head>
<style>
.container {
    position: relative;
    max-width: 1000px;
    margin: auto;
    padding: 50px;
}
.leftbox {
    font: 1.5em arial, sans-serif;
    text-align: center;
    width: 400px;
    position: absolute;

}
.rightbox {
    font: 1.5em arial, sans-serif;
    text-align: left;
    margin-left: 400px;
    left: 0px;
}

body {
    font: 1rem arial, sans-serif;
    background-color: #eee;
    color: #111;
}

b {color: #000;}

h1 {color: #111;}

a {color: #113;}

.remaintime {
    font: 3em arial, sans-serif;
    font-weight: bold;
    text-align: center;
}

.refreshtime {
    font: 0.5em arial, sans-serif;
    text-align: center;
}

.warning {
    color: #e82;
}

.blink {
    animation: blink 1s linear infinite;
    color: #e11;
}

@keyframes blink {
    0% {opacity: 1;}
    50% {opacity: 0.5;}
    100% {opacity: 1;}
}
</style>
</head>

<body>
<div class="container">
    <div class="leftbox">
    <svg wide="100" height="100" viewBox="0 0 512 512">
        <path fill="black" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"></path>
    </svg>
    <p id="remaintime" class="remaintime"></p>
    <p id="refreshtime" class="refreshtime"></p>
    <p id="targetlink" class="refreshtime" style='display:none;'>If browser not automatic refresh <a href="{{.target}}">Click
            to Continue</a></p>
    </div>
    <div class="rightbox">
        <h1>Waiting Room.</h1>
        <p>You are in the queue. Please wait until we ready to serve.</p>
        <p><b>Do not press F5 or refresh.</b></p>
        <p>Estimate wait time may vary depend on number of users and server load.</p>
        <p class="warning">{{.warningText}}</p>
        <p>{{.messaage}}</p>
    </div>
</div>
<script>
    // Set the date we're counting down to
    var countDown = new Date().getTime() + {{.remaintime }}; //milisec
    var refCountDown = new Date().getTime() + {{.refreshtime }}; //milisec

    function pad(num, size) {
        var s = "000000000" + num;
        return s.substr(s.length - size);
    }
    function countDownString(t) {
        var d = Math.floor(t / (1000 * 60 * 60 * 24));
        var h = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var m = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));
        var sc = Math.floor((t % (1000 * 60)) / 1000);
        var s = ''
        if (d > 0) { s = s + d + 'd '; }
        if (h > 0) { s = s + h + ':'; }
        if (m < 0) { m = 0 }
        if (sc < 0) { sc = 0 }
        s = s + pad(m, 2) + ':' + pad(sc, 2);
        return s
    }

    var isblink = false
    // Update the count down every 1 second
    var x = setInterval(function () {

        // Get todays date and time
        var now = new Date().getTime();

        // Find the distance between now and the count down 
        var cstr = countDownString(countDown - now)
        var rstr = countDownString(refCountDown - now)

        document.getElementById("refreshtime").innerHTML = rstr + " to automatic refresh";
        document.getElementById("remaintime").innerHTML = cstr;

        // If the count down is over, connect to target 
        if (refCountDown - now < 0) {
            clearInterval(x);
            document.getElementById("refreshtime").innerHTML = "REFRESHING";
            document.getElementById("targetlink").style.display = '';
            window.location = {{.target }};
    }
if (countDown - now < 30000 && isblink == false) {
        document.getElementById("remaintime").classList.add("blink");
        isblink = true;
    }

    // display manual refresh link
    if (refCountDown - now < 4000) {
        document.getElementById("targetlink").style.display = '';
    }
}, 200);
</script>

</body>

</html>